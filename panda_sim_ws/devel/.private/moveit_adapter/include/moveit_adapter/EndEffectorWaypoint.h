// Generated by gencpp from file moveit_adapter/EndEffectorWaypoint.msg
// DO NOT EDIT!


#ifndef MOVEIT_ADAPTER_MESSAGE_ENDEFFECTORWAYPOINT_H
#define MOVEIT_ADAPTER_MESSAGE_ENDEFFECTORWAYPOINT_H

#include <ros/service_traits.h>


#include <moveit_adapter/EndEffectorWaypointRequest.h>
#include <moveit_adapter/EndEffectorWaypointResponse.h>


namespace moveit_adapter
{

struct EndEffectorWaypoint
{

typedef EndEffectorWaypointRequest Request;
typedef EndEffectorWaypointResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct EndEffectorWaypoint
} // namespace moveit_adapter


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::moveit_adapter::EndEffectorWaypoint > {
  static const char* value()
  {
    return "04ac508012fcfbad2482b96edbe35269";
  }

  static const char* value(const ::moveit_adapter::EndEffectorWaypoint&) { return value(); }
};

template<>
struct DataType< ::moveit_adapter::EndEffectorWaypoint > {
  static const char* value()
  {
    return "moveit_adapter/EndEffectorWaypoint";
  }

  static const char* value(const ::moveit_adapter::EndEffectorWaypoint&) { return value(); }
};


// service_traits::MD5Sum< ::moveit_adapter::EndEffectorWaypointRequest> should match
// service_traits::MD5Sum< ::moveit_adapter::EndEffectorWaypoint >
template<>
struct MD5Sum< ::moveit_adapter::EndEffectorWaypointRequest>
{
  static const char* value()
  {
    return MD5Sum< ::moveit_adapter::EndEffectorWaypoint >::value();
  }
  static const char* value(const ::moveit_adapter::EndEffectorWaypointRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::moveit_adapter::EndEffectorWaypointRequest> should match
// service_traits::DataType< ::moveit_adapter::EndEffectorWaypoint >
template<>
struct DataType< ::moveit_adapter::EndEffectorWaypointRequest>
{
  static const char* value()
  {
    return DataType< ::moveit_adapter::EndEffectorWaypoint >::value();
  }
  static const char* value(const ::moveit_adapter::EndEffectorWaypointRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::moveit_adapter::EndEffectorWaypointResponse> should match
// service_traits::MD5Sum< ::moveit_adapter::EndEffectorWaypoint >
template<>
struct MD5Sum< ::moveit_adapter::EndEffectorWaypointResponse>
{
  static const char* value()
  {
    return MD5Sum< ::moveit_adapter::EndEffectorWaypoint >::value();
  }
  static const char* value(const ::moveit_adapter::EndEffectorWaypointResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::moveit_adapter::EndEffectorWaypointResponse> should match
// service_traits::DataType< ::moveit_adapter::EndEffectorWaypoint >
template<>
struct DataType< ::moveit_adapter::EndEffectorWaypointResponse>
{
  static const char* value()
  {
    return DataType< ::moveit_adapter::EndEffectorWaypoint >::value();
  }
  static const char* value(const ::moveit_adapter::EndEffectorWaypointResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MOVEIT_ADAPTER_MESSAGE_ENDEFFECTORWAYPOINT_H
